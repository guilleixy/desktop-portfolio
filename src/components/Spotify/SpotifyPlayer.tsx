"use client";
import { useEffect, useState } from "react";
import Image from "next/image";
import Skeleton from "react-loading-skeleton";
import MarqueeText from "../shared/MarqueeText";
import { msToMinutesSeconds } from "@/utils/msToMinutes";
import { getTimeAgo } from "@/utils/getTimeAgo";
import NowPlayingIcon from "./NowPlayingIcon";

export default function SpotifyPlayer() {
  const [currentTrack, setCurrentTrack] = useState<any>(null);
  const [loading, setLoading] = useState<boolean>(true);

  const fetchCurrentTrack = async () => {
    try {
      const res = await fetch("/api/spotify/lastPlayed");
      if (!res.ok) throw new Error("Network response was not ok");
      const data = await res.json();
      setCurrentTrack(data);
    } catch (e) {
      console.error("Error fetching last played:", e);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchCurrentTrack();
  }, []);

  const title = currentTrack?.data?.name;
  const artists = currentTrack?.data?.artists
    ?.map((a: any) => a.name)
    .join(", ");
  const duration = msToMinutesSeconds(currentTrack?.data?.duration_ms) || null;
  const source = currentTrack?.source || null;
  return (
    <div className="flex justify-between w-full items-center flex-grow px-2 py-2">
      <div className="w-5/16">
        <div className="flex items-center gap-3 w-full">
          {!loading ? (
            <Image
              src={currentTrack.data.album.images[0].url}
              alt={`${title ?? "track"} album art`}
              width={52}
              height={52}
              className="rounded-md shrink-0"
            />
          ) : (
            <Skeleton
              width={52}
              height={52}
              baseColor="var(--color-spotify-grey-500)"
              highlightColor="var(--color-spotify-grey-200)"
            />
          )}

          <div className="flex flex-col min-w-0 flex-1 max-w-[240px]">
            {!loading ? (
              <MarqueeText className="text-xs font-medium">{title}</MarqueeText>
            ) : (
              <Skeleton
                height={12}
                baseColor="var(--color-spotify-grey-500)"
                highlightColor="var(--color-spotify-grey-200)"
              />
            )}

            {!loading ? (
              <MarqueeText className="text-[0.6rem] text-spotify-grey-50">
                {artists}
              </MarqueeText>
            ) : (
              <Skeleton
                height={10}
                baseColor="var(--color-spotify-grey-500)"
                highlightColor="var(--color-spotify-grey-200)"
              />
            )}
          </div>
        </div>
      </div>
      <div className="w-6/16">
        <div className="flex justify-center items-center gap-6">
          <svg
            width="17"
            height="17"
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M13.1215 13.9292C13.1506 13.9292 13.1769 13.9475 13.1875 13.9809C13.2007 14.0113 13.1929 14.0477 13.1718 14.072C12.9528 14.3241 12.5146 14.8282 12.5146 14.8282C12.2137 15.1744 12.2137 15.7361 12.5146 16.0823C12.8154 16.4285 13.3011 16.4285 13.6019 16.0823C13.6019 16.0823 15.5995 13.7866 16.13 13.1731C16.1643 13.1337 16.1828 13.079 16.1828 13.0243C16.1828 12.9697 16.1643 12.915 16.13 12.8755C15.5995 12.2621 13.6019 9.96629 13.6019 9.96629C13.3011 9.62011 12.8154 9.62011 12.5146 9.96629C12.2137 10.3125 12.2137 10.8743 12.5146 11.2205C12.5146 11.2205 12.9764 11.7519 13.2034 12.0131C13.2245 12.0374 13.2325 12.0738 13.2193 12.1042C13.2087 12.1376 13.1823 12.1558 13.1533 12.1558C12.7522 12.1558 11.8128 12.1527 11.8128 12.1527C11.4591 12.1527 11.1053 11.9554 10.7332 11.6669C10.2609 11.2964 9.78325 10.7741 9.29768 10.1668C9.29768 10.1668 9.01271 9.81144 8.86493 9.6262C8.84118 9.59584 8.80951 9.57763 8.77256 9.57763C8.73826 9.57459 8.70395 9.58974 8.6802 9.61707C8.46644 9.84482 7.95444 10.3854 7.74068 10.6131C7.71429 10.6405 7.69841 10.6769 7.69841 10.7164C7.69578 10.7559 7.70909 10.7953 7.73284 10.8257C7.88063 11.011 8.1656 11.3663 8.1656 11.3663C9.40328 12.912 10.6648 13.9232 11.8101 13.9232C11.8101 13.9232 12.7283 13.9262 13.1215 13.9292ZM13.1718 2.38055C13.1929 2.40484 13.2007 2.43825 13.1875 2.47165C13.1769 2.50202 13.1506 2.52325 13.1215 2.52325C12.7283 2.52325 11.8101 2.52628 11.8101 2.52628C11.0052 2.52628 10.1476 2.99701 9.29253 3.823C8.21846 4.86157 7.10464 6.48015 5.99627 8.10481C4.95651 9.62318 3.92483 11.1506 2.91937 12.1224C2.38894 12.6356 1.89 13.0061 1.39124 13.0061C1.39124 13.0061 0.567873 13.0061 0.243277 13.0061C0.169386 13.0061 0.111328 13.0729 0.111328 13.1549C0.111328 13.492 0.111328 14.2906 0.111328 14.6247C0.111328 14.6672 0.124688 14.7036 0.148439 14.734C0.174829 14.7613 0.206332 14.7765 0.243277 14.7765C0.462313 14.7765 0.881995 14.7765 0.881995 14.7765H1.39124C2.19877 14.7765 3.05396 14.3089 3.90899 13.4798C4.98306 12.4413 6.09671 10.8227 7.20773 9.19803C8.24485 7.67966 9.27917 6.15216 10.2846 5.1804C10.8151 4.66719 11.3113 4.29672 11.8101 4.29672H11.8128C11.8128 4.29672 12.7522 4.2937 13.1533 4.2937C13.1823 4.2937 13.2087 4.31493 13.2193 4.3453C13.2325 4.37567 13.2245 4.41211 13.2034 4.4364C12.9764 4.7006 12.5146 5.23206 12.5146 5.23206C12.2137 5.57825 12.2137 6.13699 12.5146 6.48318C12.8154 6.82936 13.3011 6.82936 13.6019 6.48318C13.6019 6.48318 15.5995 4.18738 16.13 3.57395C16.1643 3.53448 16.1828 3.4829 16.1828 3.4252C16.1828 3.37054 16.1643 3.31587 16.13 3.27639C15.5995 2.666 13.6019 0.367166 13.6019 0.367166C13.3011 0.0240143 12.8154 0.0240143 12.5146 0.367166C12.2137 0.713355 12.2137 1.27518 12.5146 1.62136C12.5146 1.62136 12.9528 2.12546 13.1718 2.38055ZM0.881995 3.44643H1.39124C1.83459 3.44643 2.27806 3.74401 2.74516 4.16612C3.33629 4.69755 3.93538 5.43856 4.54235 6.26455C4.54235 6.26455 4.81136 6.632 4.95387 6.82635C4.97498 6.85672 5.00945 6.87492 5.04376 6.87795C5.07807 6.88403 5.11221 6.86885 5.1386 6.84456C5.36027 6.62895 5.89071 6.11267 6.11502 5.89706C6.14141 5.86973 6.15733 5.83334 6.15997 5.79386C6.16261 5.75438 6.15201 5.71486 6.1309 5.68449C5.98839 5.49014 5.7167 5.12269 5.7167 5.12269C4.8907 3.99606 4.06725 3.02128 3.27028 2.41697C2.63428 1.93412 2.00084 1.67296 1.39124 1.67296H0.111328V3.44643H0.881995Z"
              fill="white"
              fillOpacity="0.5"
            />
          </svg>
          <svg
            width="17"
            height="17"
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M4.20617 9.81979L4.20617 16.0788C4.20617 16.3886 3.96764 16.6403 3.63965 16.6403L1.31391 16.6403C1.01574 16.6403 0.777205 16.3886 0.777205 16.0788L0.777206 0.969273C0.777206 0.659484 1.01574 0.408112 1.31391 0.408112L3.63965 0.408112C3.96764 0.408112 4.20618 0.659485 4.20618 0.969273L4.20617 7.22828L15.5367 0.620354C15.805 0.464706 16.133 0.464706 16.4014 0.620354C16.6697 0.776 16.8486 1.0635 16.8486 1.37479C16.8486 4.65271 16.8486 12.3953 16.8486 15.6736C16.8486 15.9845 16.6697 16.272 16.4014 16.4277C16.133 16.5833 15.805 16.5834 15.5367 16.428L4.20617 9.81979Z"
              fill="white"
              fillOpacity="0.5"
            />
          </svg>
          <svg
            width="38"
            height="38"
            viewBox="0 0 38 38"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M19 0.119019C29.349 0.119019 37.75 8.60444 37.75 19.0564C37.75 29.5086 29.349 37.994 19 37.994C8.65097 37.994 0.25 29.5086 0.25 19.0564C0.25 8.60444 8.65097 0.119019 19 0.119019ZM16.8084 11.4861C16.8084 11.0649 16.4432 10.7228 16.0475 10.7228H12.8819C12.4558 10.7228 12.1209 11.0649 12.1209 11.4861V26.5338C12.1209 26.9553 12.4558 27.2974 12.8819 27.2974H16.0475C16.4432 27.2974 16.8084 26.9553 16.8084 26.5338V11.4861ZM26.1834 11.4861C26.1834 11.0649 25.8486 10.7228 25.4225 10.7228H22.2569C21.8308 10.7228 21.4959 11.0649 21.4959 11.4861V26.5338C21.4959 26.9553 21.8308 27.2974 22.2569 27.2974H25.4225C25.8486 27.2974 26.1834 26.9553 26.1834 26.5338V11.4861Z"
              fill="#D9D9D9"
            />
          </svg>
          <svg
            width="17"
            height="17"
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M12.7396 7.22861V0.969627C12.7396 0.659838 12.9782 0.408142 13.3062 0.408142H15.6319C15.9301 0.408142 16.1686 0.659838 16.1686 0.969627V16.0791C16.1686 16.3889 15.9301 16.6403 15.6319 16.6403H13.3062C12.9782 16.6403 12.7396 16.3889 12.7396 16.0791V9.82012L1.40912 16.428C1.14077 16.5837 0.812779 16.5837 0.544425 16.428C0.276071 16.2724 0.097168 15.9849 0.097168 15.6736C0.097168 12.3957 0.097168 4.65307 0.097168 1.37485C0.097168 1.06386 0.276071 0.776353 0.544425 0.620706C0.812779 0.465059 1.14077 0.465036 1.40912 0.620382L12.7396 7.22861Z"
              fill="white"
              fillOpacity="0.5"
            />
          </svg>

          <svg
            width="17"
            height="17"
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4.69678 0.838135H13.1792C14.9708 0.838135 16.4722 2.38275 16.4722 4.34106V10.2014C16.472 12.1601 14.9703 13.7063 13.1792 13.7063H8.78662L9.58643 14.551L10.4673 15.4807C10.5956 15.6161 10.5956 15.8472 10.4673 15.9827C10.357 16.0988 10.1818 16.1009 10.0669 15.9807L7.64697 13.426L10.0688 10.8704C10.1836 10.7493 10.3563 10.7513 10.4663 10.8684L10.4673 10.8704C10.5797 10.989 10.5938 11.1785 10.5093 11.3147L10.4673 11.3694L9.58545 12.303L8.78857 13.1458H13.1792C14.7572 13.1458 15.9964 11.7994 15.9966 10.2014V4.34106C15.9966 2.7429 14.7573 1.39575 13.1792 1.39575H4.69678C3.1155 1.39575 1.87939 2.74335 1.87939 4.34106V10.2014C1.87957 11.799 3.1156 13.1458 4.69678 13.1458H4.94971V13.7063H4.69678C2.90274 13.7063 1.40105 12.1598 1.40088 10.2014V4.34106C1.40088 2.383 2.90217 0.838135 4.69678 0.838135Z"
              fill="white"
              fillOpacity="0.5"
              stroke="black"
            />
          </svg>
        </div>
        <div className="flex items-center gap-1">
          <div>0:00</div>
          <div className="bg-spotify-grey-300 w-full h-2 rounded-sm"></div>
          <div>{duration || <Skeleton />}</div>
        </div>
      </div>
      <div className="w-5/16 text-spotify-green flex items-center justify-end h-full">
        {source === "currentlyPlaying" ? (
          <div className="flex items-center gap-2">
            Playing right now!
            <NowPlayingIcon />
          </div>
        ) : (
          <div> Last played {getTimeAgo(currentTrack?.playedAt)}</div>
        )}
      </div>
    </div>
  );
}
